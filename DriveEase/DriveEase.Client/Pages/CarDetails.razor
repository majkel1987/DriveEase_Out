@page "/car/{id:int}"
@inject IConfiguration Configuration
@inject ICarHttpRepository CarHttpRepository
@inject NavigationManager NavigationManager
@rendermode InteractiveAuto

<PageTitle>Vehicle Details</PageTitle>

@if (_car == null)
{
	<p><em>Loading...</em></p>
}
else
{
	<section class="container my-3">
		<header class="d-flex justify-content-between align-items-center mb-2">
			<div>
				<h6 class="text-muted">Vehicle fleet</h6>
				<h3>@_car.Brand - @_car.Model</h3>
			</div>
			<div class="mb-3">
				<button class="btn btn-outline-primary" @onclick="NavigateToReservations">Go to reservations</button>
			</div>
		</header>
		<nav class="navbar navbar-expand-lg bg-body-tertiary mb-3" style="background-color: #e3f2fd;">
			<div class="container-fluid">
				<a class="navbar-brand" href="#">Summary</a>
				<button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav"
						aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
					<span class="navbar-toggler-icon"></span>
				</button>
				<div class="collapse navbar-collapse" id="navbarNav">
					<ul class="navbar-nav">
						<li class="nav-item">
							<a class="nav-link" href="#">Vehicle Calendar</a>
						</li>
						<li class="nav-item">
							<a class="nav-link" href="#">Tariff Plans</a>
						</li>
						<li class="nav-item">
							<a class="nav-link" href="#">Damage</a>
						</li>
						<li class="nav-item">
							<a class="nav-link" href="#">Documents</a>
						</li>
					</ul>
				</div>
			</div>
		</nav>
		<main class="row">
			<section class="col-md-6 mb-4">
				<div class="card shadow-sm" style="background-color: white;">
					<h5 class="card-header">
						Vehicle Details
					</h5>
					<div class="card-body">
						<ul class="list-unstyled">
							<li class="d-flex mb-2">
								<span class="font-weight-bold text-left" style="min-width: 250px;">Vehicle:</span>
								<span>@_car.Brand - @_car.Model - @_car.Engine</span>
							</li>
							<li class="d-flex mb-2">
								<span class="font-weight-bold text-left" style="min-width: 250px;">License plate:</span>
								<span>@_car.LicensePlate</span>
							</li>
							<li class="d-flex mb-2">
								<span class="font-weight-bold text-left" style="min-width: 250px;">VIN number:</span>
								<span>@_car.VinNumber</span>
							</li>
							<li class="d-flex mb-2">
								<span class="font-weight-bold text-left" style="min-width: 250px;">Power:</span>
								<span>Brak danych</span>
							</li>
							<li class="d-flex mb-2">
								<span class="font-weight-bold text-left" style="min-width: 250px;">Year of production:</span>
								<span>@_car.Year</span>
							</li>
							<li class="d-flex mb-2">
								<span class="font-weight-bold text-left" style="min-width: 250px;">Color:</span>
								<span>@_car.Color</span>
							</li>
							<li class="d-flex mb-2">
								<span class="font-weight-bold text-left" style="min-width: 250px;">Fuel type:</span>
								<span>@_car.FuelType</span>
							</li>
							<li class="d-flex mb-2">
								<span class="font-weight-bold text-left" style="min-width: 250px;">Insurance policy number:</span>
								<span>@_car.InsurancePolicyNumber</span>
							</li>
							<li class="d-flex mb-2">
								<span class="font-weight-bold text-left" style="min-width: 250px;">Equipment:</span>
								@foreach (var feature in _car.Features)
								{
									<span>@feature</span>
								}
							</li>
							<li class="d-flex mb-2">
								<span class="font-weight-bold text-left" style="min-width: 250px;">Overview:</span>
								<span>Brak danych</span>
							</li>
							<li class="d-flex mb-2">
								<span class="font-weight-bold text-left" style="min-width: 250px;">Add date:</span>
								<span>12 maj 2024, 08:52</span>
							</li>
							<li class="d-flex mb-2">
								<span class="font-weight-bold text-left" style="min-width: 250px;">Mileage:</span>
								<span>@_car.Mileage</span>
							</li>
						</ul>
						<div class="mb-3">
							<RadzenButton ButtonType="ButtonType.Submit" Text="Edit Vehicle" IconPosition="IconPosition.Left"
										  Variant="Variant.Filled" ButtonStyle="ButtonStyle.Primary" Click="NavigateToEditCar" />
						</div>
					</div>
				</div>
			</section>
			<section class="col-md-6 mb-4">
				<div class="card shadow-sm" style="background-color: white;">
					<h5 class="card-header">
						Vehicle servicing
					</h5>
					<div class="card-body">
						<ul class="list-unstyled d-flex justify-content-between">
							<li class="col text-center">
								<div class="text-danger font-weight-bold" style="font-size: 2em;">
									@_car.ServiceHistory.Count(x => x.Status == ServiceStatus.Planned)
								</div>
								<span class="font-weight-bold" style="font-size: 1em;">Planned services</span>
							</li>
							<li class="col text-center">
								<div class="text-info font-weight-bold" style="font-size: 2em;">
									@_car.ServiceHistory.Count(x => x.Status == ServiceStatus.InProgress)
								</div>
								<span class="font-weight-bold" style="font-size: 1em;">Services in progress</span>
							</li>
							<li class="col text-center">
								<div class="text-success font-weight-bold" style="font-size: 2em;">
									@_car.ServiceHistory.Count(x => x.Status == ServiceStatus.Completed)
								</div>
								<span class="font-weight-bold" style="font-size: 1em;">Completed services</span>
							</li>
							<li class="col text-center">
								<div class="text-secondary font-weight-bold" style="font-size: 2em;">
									@_car.ServiceHistory.Count(x => x.Status == ServiceStatus.Cancelled)
								</div>
								<span class="font-weight-bold" style="font-size: 1em;">Cancelled services</span>
							</li>
						</ul>
						<div class="mb-3">
							<RadzenButton ButtonType="ButtonType.Submit" Text="Go to details" IconPosition="IconPosition.Left"
										  Variant="Variant.Filled" ButtonStyle="ButtonStyle.Primary" Click="NavigateToCarServiceDetails" />
						</div>
					</div>
				</div>
			</section>
		</main>
	</section>
}

@code {
	[Parameter]
	public int Id { get; set; }

	private CarDto _car;
	private string _baseUrl = string.Empty;

	protected override async Task OnInitializedAsync()
	{
		_baseUrl = Configuration["ApiConfiguration:BaseAddress"];

		try
		{
			_car = await CarHttpRepository.GetCarWithServiceHistory(Id);
		}
		catch (Exception ex)
		{
			Console.WriteLine($"Błąd podczas ładowania danych: {ex.Message}");
		}
	}

	private void NavigateToReservations()
	{
		NavigationManager.NavigateTo($"/");
	}

	private void NavigateToEditCar()
	{
		NavigationManager.NavigateTo($"/editcar/{_car.Id}");
	}

	private void NavigateToCarServiceDetails()
	{
		NavigationManager.NavigateTo($"/carservicedetails/{_car.Id}");
	}

}
